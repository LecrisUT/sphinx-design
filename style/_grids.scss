// Adapted from Bootstrap v5.0.2 (https://getbootstrap.com/)
// See: dist/css/bootstrap-grid.css
// Copyright 2011-2021 The Bootstrap Authors
// Copyright 2011-2019 Twitter, Inc.
// Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
@use 'sass:math';

$media-min-sm: 576px;
$media-min-md: 768px;
$media-min-lg: 992px;
$media-min-xl: 1200px;

$media-max-sm: 540px;
$media-max-md: 720px;
$media-max-lg: 960px;
$media-max-xl: 1140px;

$media-widths: (
  "sm": $media-min-sm,
  "md": $media-min-md,
  "lg": $media-min-lg,
  "xl": $media-min-xl,
) !default;

// TODO merge with pad-width
$spacer: 1rem;
$gutter-widths: (
  0: 0,
  1: $spacer * .25,
  2: $spacer * .5,
  3: $spacer,
  4: $spacer * 1.5,
  5: $spacer * 3,
) !default;

.mui-container,
.mui-container-fluid,
.mui-container-lg,
.mui-container-md,
.mui-container-sm,
.mui-container-xl {
  margin-left: auto;
  margin-right: auto;
  padding-left: var(--mui-gutter-x, 0.75rem);
  padding-right: var(--mui-gutter-x, 0.75rem);
  width: 100%;
}

@media (min-width: $media-min-sm) {
  .mui-container-sm,
  .mui-container {
    max-width: $media-max-sm;
  }
}

@media (min-width: $media-min-md) {
  .mui-container-md,
  .mui-container-sm,
  .mui-mui-container {
    max-width: $media-max-md;
  }
}

@media (min-width: $media-min-lg) {
  .mui-container-lg,
  .mui-container-md,
  .mui-container-sm,
  .mui-container {
    max-width: $media-max-lg;
  }
}

@media (min-width: $media-min-xl) {
  .mui-container-xl,
  .mui-container-lg,
  .mui-container-md,
  .mui-container-sm,
  .mui-container {
    max-width: $media-max-xl;
  }
}

.mui-row {
  --mui-gutter-x: 1.5rem;
  --mui-gutter-y: 0;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-top: calc(var(--mui-gutter-y) * -1);
  margin-right: calc(var(--mui-gutter-x) * -0.5);
  margin-left: calc(var(--mui-gutter-x) * -0.5);
}

.mui-row > * {
  box-sizing: border-box;
  flex-shrink: 0;
  width: 100%;
  max-width: 100%;
  padding-right: calc(var(--mui-gutter-x) * 0.5);
  padding-left: calc(var(--mui-gutter-x) * 0.5);
  margin-top: var(--mui-gutter-y);
}

.mui-col {
  flex: 1 0 0%;
  -ms-flex: 1 0 0%;
}

@for $i from 1 through 12 {
  .mui-row-cols-#{$i} {
    > * {
      flex: 0 0 auto;
      -ms-flex: 0 0 auto;
      width: math.div(100%, $i);
    }
  }
}

@each $cat, $width in $media-widths {
  @media (min-width: $width) {
    .mui-col-#{$cat} {
      flex: 1 0 0%;
      -ms-flex: 1 0 0%;
    }

    .mui-row-cols-#{$cat}-auto {
      flex: 1 0 auto;
      -ms-flex: 1 0 auto;
      width: 100%;
    }

    @for $i from 1 through 12 {
      .mui-row-cols-#{$cat}-#{$i} {
        > * {
          flex: 0 0 auto;
          -ms-flex: 0 0 auto;
          width: math.div(100%, $i);
        }
      }
    }
  }
}

.mui-col-auto {
  flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  width: auto;
}

@for $i from 1 through 12 {
  .mui-col-#{$i} {
    flex: 0 0 auto;
    -ms-flex: 0 0 auto;
    width: 100% * math.div($i, 12);
  }
}

@each $cat, $width in $gutter-widths {
  .mui-g-#{$cat},
  .mui-gy-#{$cat} {
    --mui-gutter-y: #{$width};
  }
  .mui-g-#{$cat},
  .mui-gx-#{$cat} {
    --mui-gutter-x: #{$width};
  }
}

@each $cat, $width in $media-widths {
  @media (min-width: $width) {
    .mui-col-#{$cat}-auto {
      -ms-flex: 0 0 auto;
      flex: 0 0 auto;
      width: auto;
    }
    @for $i from 1 through 12 {
      .mui-col-#{$cat}-#{$i} {
        -ms-flex: 0 0 auto;
        flex: 0 0 auto;
        width: 100% * math.div($i, 12);
      }
    }
    @each $gcat, $gwidth in $gutter-widths {
      .mui-g-#{$cat}-#{$gcat},
      .mui-gy-#{$cat}-#{$gcat} {
        --mui-gutter-y: #{$gwidth};
      }
      .mui-g-#{$cat}-#{$gcat},
      .mui-gx-#{$cat}-#{$gcat} {
        --mui-gutter-x: #{$gwidth};
      }
    }
  }
}

.mui-d-flex {
  display: -ms-flexbox !important;
  display: flex !important;
}
